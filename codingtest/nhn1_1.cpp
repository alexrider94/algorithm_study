#include <iostream>
#include <string>
#include <vector>

using namespace std;

/*570557 92595 288

73 50 82 98 62 86 18 7 34 24 37 97 16 73 22 33 57 85 5 74 1 76 74 33 97 59 56 38 100 67 96 24 16 30 22 78 15 91 36 100 67 72 96 82 96 69 66 5 5 23 78 6 98 3 38 94 61 93 83 12 12 31 88 79 60 61 8 26 3 44 78 69 15 73 3 63 94 20 67 98 42 96 3 39 99 40 84 11 85 67 75 48 49 62 26 8 22 86 85 24 29 62 45 95 87 99 57 80 18 23 77 60 71 32 50 69 71 34 31 7 52 5 54 100 18 32 59 91 17 43 15 45 57 11 91 43 9 48 74 78 22 2 37 92 33 39 12 56 72 95 62 75 99 68 74 69 99 84 59 15 78 73 11 34 35 1 28 95 100 53 73 22 55 61 65 87 99 29 42 70 23 4 96 21 23 69 89 21 4 100 87 82 72 49 67 59 49 47 53 1 99 25 74 53 38 90 92 36 18 33 58 40 88 53 13 10 74 53 82 77 52 68 10 76 16 29 34 17 75 38 17 25 63 42 30 100 31 21 87 49 53 44 88 93 97 52 54 22 5 36 50 56 3 60 31 19 40 16 87 66 54 3 90 68 44 19 19 74 39 5 22 44 1 62 88 49 13 41 70 69 76 19 25 79 30 7 49 21*/

/*int 배열로 받는데 입력형식에 숫자가 붙어서 다 int형에 하나에 엄청큰숫자가 들어가버려서 오버플로우가 발생했다. 고치는 방법으로는 char로 사용
scanf("%1d",배열값) 으로 할려고했는데 잘 안된다. */

//테스트값
//01110010101101010000010100001011101110100010111001000000101000110001011010010110010010100000001001010110001010001000111111011100
//72b5:050b:ba2e:40a3:1696:4a02:5628:8fdc

string makeHex(int data)
{
    string c;
    if (data == 10)
    {
        c = 'a';
    }
    else if (data == 11)
    {
        c = 'b';
    }
    else if (data == 12)
    {
        c = 'c';
    }
    else if (data == 13)
    {
        c = 'd';
    }
    else if (data == 14)
    {
        c = 'e';
    }
    else if (data == 15)
    {
        c = 'f';
    }
    else
        c = to_string(data);
    return c;
}

int main()
{
    vector<char> bits(128);
    string result = "";
    for (int i = 0; i < 128; ++i)
    {
        cin >> bits[i];
    }
    for (int i = 0; i < 32; ++i)
    {
        int a = 0;
        for (int j = i * 4; j < (4 * i) + 4; ++j)
        {
            if ((j % 4) == 0)
            {
                a += (bits[j] - '0') * 8;
            }
            else if ((j % 4) == 1)
            {
                a += (bits[j] - '0') * 4;
            }
            else if ((j % 4) == 2)
            {
                a += (bits[j] - '0') * 2;
            }
            else if ((j % 4) == 3)
            {
                a += (bits[j] - '0');
            }
        }
        result += makeHex(a);
        if (i % 4 == 3 && i != 31)
        {
            result += ":";
        }
    }
    cout << result;

    return 0;
}